@startuml
actor User

participant "Core Plugin (C++)"
participant "csv Transformer (python)"
participant "Predictor (python)"
participant "best_features (json)"
participant SnortLogger

database ExpiredFlows
database classifiedFlows
database ML_models
User -> "Core Plugin (C++)" : configure(SnortConfig *)
"Core Plugin (C++)" -> "Core Plugin (C++)" : Extract features & append to feature vector
"Core Plugin (C++)" -> ExpiredFlows : Output extracted features in a list

"Core Plugin (C++)" -> "csv Transformer (python)" : Calls 
ExpiredFlows -> "csv Transformer (python)" : Provides list for formatting
activate "Core Plugin (C++)"

alt "new expired flows detected"
par
  "Core Plugin (C++)" -> "Predictor (python)" : Calls Predictor with different start Params for each attack-type
  "Predictor (python)" <- "best_features (json)" : loads appropriate feature vector
  "Predictor (python)"-> "Predictor (python)" : performs Data preprocessing
  ML_models-> "Predictor (python)" : loads appropriate ML model
  "Predictor (python)"-> classifiedFlows : stores classification results
end
"Predictor (python)" ->  "Core Plugin (C++)" : All threads have finished
  "Core Plugin (C++)" <- classifiedFlows : Reads classified flows
  "Core Plugin (C++)" -> SnortLogger : Outputs classified flows
deactivate "Core Plugin (C++)"
end
